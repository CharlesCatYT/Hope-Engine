var fastCar:FlxSprite;
var limo:FlxSprite;

var fastCarCanDrive:Bool = true;

var bgLimo:FlxSprite;

var dancers:Array<BackgroundDancer> = [];

var lights:Array<FlxSprite> = [];
var lightX:Float = -1000;
var lightMax:Float = 2000;

function createBackground()
{
    // This happens BEFORE BF and GF get put.

    var skyBG:FlxSprite = new FlxSprite(-120, -50).loadGraphic(Paths.image('limo/limoSunset','week4'));
    skyBG.scrollFactor.set(0.1, 0.1);
    add(skyBG);

    if (Settings.extraDetails)
    {
        var lightAmount = 10;
        for (i in 0...lightAmount)
        {
            var light = new FlxSprite(lightX);
            light.loadGraphic(Paths.image("limo/death/lowHangingLight", "week4"));
            // light.velocity.x = 4000;
            light.scrollFactor.set();
            light.antialiasing = true;
            add(light);
            lights.push(light);
        }
    }

    bgLimo = new FlxSprite(-200, 480);
    bgLimo.frames = Paths.getSparrowAtlas('limo/bgLimo','week4');
    bgLimo.animation.addByPrefix('drive', "background limo pink", 24);
    bgLimo.animation.play('drive');
    bgLimo.scrollFactor.set(0.4, 0.4);
    bgLimo.antialiasing = true;
    add(bgLimo);

    if (Settings.distractions)
    {
        for (i in 0...5)
        {
            var dancer:BackgroundDancer = new BackgroundDancer((370 * i) + 130, bgLimo.y - 400);
            dancer.scrollFactor.set(0.4, 0.4);
            add(dancer);
            dancers.push(dancer);
        }
    }

    if (Settings.extraDetails)
    {
        var particleBackEmitter = new FlxEmitter(-400);
        particleBackEmitter.launchMode = FlxEmitterMode.SQUARE;
        particleBackEmitter.height = FlxG.height;

        for (fuck in 0...40)
        {
            var particle = new FlxParticle();
            particle.loadGraphic(Paths.image('limo/windLine', 'week4'));
            particle.lifespan = 0.1;
            particle.exists = false;
            particle.scrollFactor.set(0.45, 0.45);
            particle.antialiasing = true;
            particleBackEmitter.add(particle); 
        }

        particleBackEmitter.start(false, 0.1, 0);
        particleBackEmitter.velocity.set(2048 * 2, 0, 2048 * 3, 0);
        particleBackEmitter.alpha.set(0.1, 0.3);
        particleBackEmitter.scale.set(0.75);

        add(particleBackEmitter);
    }

    var limoTex = Paths.getSparrowAtlas('limo/limoDrive','week4');

    limo = new FlxSprite(-120, 550);
    limo.frames = limoTex;
    limo.animation.addByPrefix('drive', "Limo stage", 24);
    limo.animation.play('drive');
    limo.antialiasing = true;

    fastCar = new FlxSprite(-300, 160).loadGraphic(Paths.image('limo/fastCarLol','week4'));

    if (Settings.distractions)
    {
        resetFastCar();
        add(fastCar);
    }
}

function createForeground()
{
    // This happens AFTER BF and GF get put.
    // Meaning sprites created here will be put INFRONT of the characters

    // and I quote
    // shitty layering, but it works

    remove(boyfriend);
    remove(dad);

    add(limo);

    add(boyfriend);
    add(dad);

    if (Settings.extraDetails)
    {
        var particleFrontEmitter = new FlxEmitter(-400);
        particleFrontEmitter.launchMode = FlxEmitterMode.SQUARE;
        particleFrontEmitter.height = FlxG.height;

        for (fuck in 0...40)
        {
            var particle = new FlxParticle();
            particle.loadGraphic(Paths.image('limo/windLine', 'week4'));
            particle.lifespan = 0.1;
            particle.exists = false;
            particle.antialiasing = true;
            particleFrontEmitter.add(particle); 
        }

        particleFrontEmitter.start(false, 0.2, 0);
        particleFrontEmitter.velocity.set(2048 * 1.5, 0, 2048 * 3, 0);
        particleFrontEmitter.alpha.set(0.2, 0.4);

        add(particleFrontEmitter);
    }
}

var henchDying:Bool = false;
var henchDied:Bool = false;

function beatHit(curBeat:Int)
{
    // This happens when a beat is hit.
    // Useful for things like Philly lights, etc.

    if (Settings.distractions)
    {
        for (dancer in dancers)
            dancer.dance();

        if (FlxG.random.bool(10) && fastCarCanDrive)
            fastCarDrive();
    }
    
    if (Settings.extraDetails && song == 'MILF')
    {
        // henchmen die in this beat
        // :((((((((
        var hitBeat = 200;

        if (curBeat >= hitBeat && henchDying && !henchDied)
        {
            for (light in lights)
            {
                // find a light thats beside the henchmen and position it correctly vertically
                if (light.x > -350 - light.width - 10 && light.x < -350)
                    light.y += 175;
            }

            for (i in 0...dancers.length)
            {
                new FlxTimer().start((Conductor.stepCrochet / 1000) * i, function(tmr:FlxTimer) {
                    var dancer = dancers[i];
                    dancer.die();
                    dancer.scale.set(0.9, 0.9);
                    dancer.acceleration.x = 1500;
                    dancer.acceleration.y = 2000;
                    dancer.velocity.y -= 500;
                });
            }

            new FlxTimer().start(2, function(tmr:FlxTimer) {
                bgLimo.acceleration.x = 700;
            });

            henchDied = true;
        }
        
        if (curBeat >= hitBeat - 32 && !henchDying)
        {
            henchDying = true;
            var movement = 500;

            for (i in 0...dancers.length)
            {
                var dancer = dancers[i];
                dancer.acceleration.x = -8.2;
            }

            bgLimo.acceleration.x = -8.2;
        }
    }
}

function stepHit(curStep:Int)
{
    // This happens when a step (1/4th of a beat) is hit.
    // I don't actually know what this is useful for
}

var lightTime:Float = 0;

function onUpdate(elapsed:Float)
{
    // This happens every frame.
    // Useful for checking key presses, and other things

    if (Settings.extraDetails && !PlayState.paused)
    {
        for (i in lights)
        {
            if (i.x >= lightMax)
            {
                i.x = lightX;
                i.y = 0;
                i.velocity.x = 0;
            }
        }

        lightTime += elapsed;

        if (lights.length > 0 && lightTime >= 0.3)
        {
            var lightsAvailable = [];

            for (light in lights)
            {
                if (light.velocity.x < 1)
                    lightsAvailable.push(light);
            }

            var light = lightsAvailable[FlxG.random.int(0, lightsAvailable.length - 1)];
            light.velocity.x = 4000;
            lightTime = 0;
        }
    }
}

function resetFastCar():Void
{
    if (Settings.distractions)
    {
        fastCar.x = -12600;
        fastCar.y = FlxG.random.int(140, 250);
        fastCar.velocity.x = 0;
        fastCarCanDrive = true;
    }
}

function fastCarDrive():Void
{
    if (Settings.distractions)
    {
        FlxG.sound.play(Paths.soundRandom('carPass', 0, 1), 0.7);

        fastCar.velocity.x = (FlxG.random.int(170, 220) / FlxG.elapsed) * 3;
        fastCarCanDrive = false;

        new FlxTimer().start(2, function(tmr:FlxTimer)
        {
            resetFastCar();
        });
    }
}